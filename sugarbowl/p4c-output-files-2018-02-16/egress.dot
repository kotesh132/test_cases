digraph egress {
subgraph cluster {
graph [
label="", labeljust=r, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label="egress.CFG_eg_aci_tor_mode", margin="", shape=ellipse, style=solid];
3[label="egress.debug_egress_start", margin="", shape=ellipse, style=solid];
4[label="meta.dp_eg_header.met_v == 1;", margin="", shape=rectangle, style=solid];
5[label="egress.met", margin="", shape=ellipse, style=solid];
6[label="egress.process_eg_span_session.span_session_info", margin="", shape=ellipse, style=solid];
7[label="meta.dp_eg_header.met_v == 1;", margin="", shape=rectangle, style=solid];
8[label="meta.egress.outer_dst_bd = meta.met.outer_bd;
...
meta.eg_tunnel.encap_l2_idx = (bit<13>)meta.met.encap_l2_idx;", margin="", shape=rectangle, style=solid];
9[label="meta.egress.outer_dst_bd = (bit<14>)meta.ig_eg_header.ieth_outer_bd;
...
meta.eg_tunnel.encap_l2_idx = meta.ig_eg_header.encap_l2_idx;", margin="", shape=rectangle, style=solid];
10[label="egress.process_egress_bypass.eg_bypass_info_table", margin="", shape=ellipse, style=solid];
11[label="meta.eg_bypass.vntag_bypass == 0;", margin="", shape=rectangle, style=solid];
12[label="hdr.vntag.isValid();", margin="", shape=rectangle, style=solid];
13[label="hdr.ethernet.etherType = hdr.vntag.etherType;
...
meta.egress.pkt_len = meta.egress.pkt_len + 65530;", margin="", shape=rectangle, style=solid];
14[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
15[label="meta.eg_local.src_qtag0_vld = 1;
...
meta.eg_local.src_qtag0_pcp = hdr.qtag0.pcp;", margin="", shape=rectangle, style=solid];
16[label="hdr.qtag0.isValid() && meta.eg_bypass.qtag_bypass == 0 && meta.ig_eg_header.qinq_customer_port == 0;", margin="", shape=rectangle, style=solid];
17[label="hdr.vntag.isValid();", margin="", shape=rectangle, style=solid];
18[label="hdr.vntag.etherType = hdr.qtag0.etherType;", margin="", shape=rectangle, style=solid];
19[label="hdr.ethernet.etherType = hdr.qtag0.etherType;", margin="", shape=rectangle, style=solid];
20[label="hdr.qtag0.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65532;", margin="", shape=rectangle, style=solid];
21[label="meta.CFG_aci_tor_mode.enable == 0;", margin="", shape=rectangle, style=solid];
22[label="meta.dp_eg_header.met_v == 1 && meta.met.fm_bridge_only == 0;", margin="", shape=rectangle, style=solid];
23[label="meta.egress.use_met = 1;", margin="", shape=rectangle, style=solid];
24[label="meta.egress.use_met = 0;", margin="", shape=rectangle, style=solid];
25[label="meta.ig_eg_header.ieth_dst_is_tunnel == 1;", margin="", shape=rectangle, style=solid];
26[label="meta.egress.use_encap = 1;", margin="", shape=rectangle, style=solid];
27[label="meta.met.encap_vld == 1;", margin="", shape=rectangle, style=solid];
28[label="meta.egress.use_encap = 1;", margin="", shape=rectangle, style=solid];
29[label="meta.egress.use_encap = 0;", margin="", shape=rectangle, style=solid];
30[label="meta.ig_eg_header.ieth_src_is_tunnel == 1 && meta.eg_bypass.tunnel_decap_bypass == 0 && (meta.dp_eg_header.met_v == 0 || meta.met.encap_vld == 0);", margin="", shape=rectangle, style=solid];
31[label="meta.egress.tunnel_decap = 1;", margin="", shape=rectangle, style=solid];
32[label="meta.egress.tunnel_decap = 0;", margin="", shape=rectangle, style=solid];
33[label="meta.eg_bypass.tunnel_encap_bypass == 0 && (meta.dp_eg_header.met_v == 0 && meta.ig_eg_header.ieth_dst_is_tunnel == 1 || meta.dp_eg_header.met_v == 1 && meta.met.encap_vld == 1 && meta.dp_eg_header.met1_v == 0);", margin="", shape=rectangle, style=solid];
34[label="meta.egress.tunnel_encap = 0;", margin="", shape=rectangle, style=solid];
35[label="meta.egress.tunnel_decap == 1;", margin="", shape=rectangle, style=solid];
36[label="hdr.ethernet.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65522;", margin="", shape=rectangle, style=solid];
37[label="hdr.ieth.isValid();", margin="", shape=rectangle, style=solid];
38[label="hdr.ieth.setInvalid();", margin="", shape=rectangle, style=solid];
39[label="hdr.vntag.isValid();", margin="", shape=rectangle, style=solid];
40[label="hdr.vntag.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65530;", margin="", shape=rectangle, style=solid];
41[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
42[label="meta.eg_local.outer_cos = hdr.qtag0.pcp;
...
meta.egress.pkt_len = meta.egress.pkt_len + 65532;", margin="", shape=rectangle, style=solid];
43[label="hdr.qtag1.isValid();", margin="", shape=rectangle, style=solid];
44[label="hdr.qtag1.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65532;", margin="", shape=rectangle, style=solid];
45[label="hdr.cmd.isValid();", margin="", shape=rectangle, style=solid];
46[label="hdr.cmd.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65528;", margin="", shape=rectangle, style=solid];
47[label="hdr.timestamp.isValid();", margin="", shape=rectangle, style=solid];
48[label="hdr.timestamp.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65528;", margin="", shape=rectangle, style=solid];
49[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
50[label="meta.eg_local.outer_src_ttl = hdr.ipv4.ttl;
...
meta.egress.pkt_len = meta.egress.pkt_len + 65516;", margin="", shape=rectangle, style=solid];
51[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
52[label="meta.eg_local.outer_src_ttl = hdr.ipv6.hopLimit;
...
meta.egress.pkt_len = meta.egress.pkt_len + 65496;", margin="", shape=rectangle, style=solid];
53[label="hdr.udp.isValid();", margin="", shape=rectangle, style=solid];
54[label="hdr.udp.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65532;", margin="", shape=rectangle, style=solid];
55[label="hdr.vxlan.isValid();", margin="", shape=rectangle, style=solid];
56[label="hdr.vxlan.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65528;", margin="", shape=rectangle, style=solid];
57[label="hdr.ivxlan.isValid();", margin="", shape=rectangle, style=solid];
58[label="hdr.ivxlan.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65528;", margin="", shape=rectangle, style=solid];
59[label="hdr.ethernet = hdr.inner_ethernet;", margin="", shape=rectangle, style=solid];
60[label="hdr.inner_qtag0.isValid();", margin="", shape=rectangle, style=solid];
61[label="hdr.qtag0 = hdr.inner_qtag0;", margin="", shape=rectangle, style=solid];
62[label="hdr.inner_cmd.isValid();", margin="", shape=rectangle, style=solid];
63[label="hdr.cmd = hdr.inner_cmd;", margin="", shape=rectangle, style=solid];
64[label="hdr.inner_timestamp.isValid();", margin="", shape=rectangle, style=solid];
65[label="hdr.timestamp = hdr.inner_timestamp;", margin="", shape=rectangle, style=solid];
66[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
67[label="hdr.ipv4 = hdr.inner_ipv4;", margin="", shape=rectangle, style=solid];
68[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
69[label="hdr.ipv6 = hdr.inner_ipv6;", margin="", shape=rectangle, style=solid];
70[label="hdr.fcoe.isValid();", margin="", shape=rectangle, style=solid];
71[label="hdr.fcoe = hdr.inner_fcoe;", margin="", shape=rectangle, style=solid];
72[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
73[label="meta.l3.lkp_ip_dscp = hdr.ipv4.dscp;
...
meta.l3.lkp_ip_ttl = hdr.ipv4.ttl;", margin="", shape=rectangle, style=solid];
74[label="meta.l3.lkp_ip_dscp = hdr.ipv6.dscp;
...
meta.l3.lkp_ip_ttl = hdr.ipv6.hopLimit;", margin="", shape=rectangle, style=solid];
75[label="hdr.tcp.isValid();", margin="", shape=rectangle, style=solid];
76[label="hdr.tcp = hdr.inner_tcp;", margin="", shape=rectangle, style=solid];
77[label="hdr.udp.isValid();", margin="", shape=rectangle, style=solid];
78[label="hdr.udp = hdr.inner_udp;", margin="", shape=rectangle, style=solid];
79[label="hdr.icmp.isValid();", margin="", shape=rectangle, style=solid];
80[label="hdr.icmp = hdr.inner_icmp;", margin="", shape=rectangle, style=solid];
81[label="egress.eg_src_port_state", margin="", shape=ellipse, style=solid];
82[label="egress.process_dst_port_state.dst_port_state", margin="", shape=ellipse, style=solid];
83[label="meta.ig_eg_header.l2_fwd_mode == 0;", margin="", shape=rectangle, style=solid];
84[label="meta.egress.dst_if_idx = (bit<13>)meta.ig_eg_header.ieth_dst_idx;", margin="", shape=rectangle, style=solid];
85[label="meta.egress.dst_if_idx = meta.met.ovector_idx;", margin="", shape=rectangle, style=solid];
86[label="egress.process_dst_if_state.dst_if_state", margin="", shape=ellipse, style=solid];
87[label="meta.egress.adj_vld == 1 && meta.eg_bypass.service_rw_bypass == 0;", margin="", shape=rectangle, style=solid];
88[label="egress.process_service_rewrite.service_rw", margin="", shape=ellipse, style=solid];
89[label="meta.ig_eg_header.nat_idx != 0;", margin="", shape=rectangle, style=solid];
90[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
91[label="egress.process_nat_rewrite.process_ipv4_nat_rewrite.ipv4_nat_rewrite_info", margin="", shape=ellipse, style=solid];
92[label="meta.eg_l3.ipv4_nat_l3_src_rw == 1;", margin="", shape=rectangle, style=solid];
93[label="hdr.ipv4.srcAddr = meta.eg_l3.ipv4_nat_l3_src_addr;", margin="", shape=rectangle, style=solid];
94[label="meta.eg_l3.ipv4_nat_l3_dst_rw == 1;", margin="", shape=rectangle, style=solid];
95[label="hdr.ipv4.dstAddr = meta.eg_l3.ipv4_nat_l3_dst_addr;", margin="", shape=rectangle, style=solid];
96[label="meta.eg_l3.nat_l4_src_rw == 1;", margin="", shape=rectangle, style=solid];
97[label="hdr.tcp.isValid();", margin="", shape=rectangle, style=solid];
98[label="hdr.tcp.srcPort = meta.eg_l3.nat_l4_src_addr;", margin="", shape=rectangle, style=solid];
99[label="hdr.udp.srcPort = meta.eg_l3.nat_l4_src_addr;", margin="", shape=rectangle, style=solid];
100[label="meta.eg_l3.nat_l4_dst_rw == 1;", margin="", shape=rectangle, style=solid];
101[label="hdr.tcp.isValid();", margin="", shape=rectangle, style=solid];
102[label="hdr.tcp.dstPort = meta.eg_l3.nat_l4_dst_addr;", margin="", shape=rectangle, style=solid];
103[label="hdr.udp.dstPort = meta.eg_l3.nat_l4_dst_addr;", margin="", shape=rectangle, style=solid];
104[label="egress.process_egress_input_qos.eg_input_qos_info", margin="", shape=ellipse, style=solid];
105[label="meta.input_qos_info.dscp_rw == 1;", margin="", shape=rectangle, style=solid];
106[label="meta.eg_qos.dscp_rw = 1;", margin="", shape=rectangle, style=solid];
107[label="meta.egress.tunnel_decap == 1 && meta.input_qos_info.dscp_coi == 1;", margin="", shape=rectangle, style=solid];
108[label="meta.eg_qos.dscp = meta.eg_local.outer_dscp;", margin="", shape=rectangle, style=solid];
109[label="meta.eg_qos.dscp = meta.input_qos_info.dscp;", margin="", shape=rectangle, style=solid];
110[label="meta.eg_qos.dscp = meta.l3.lkp_ip_dscp;", margin="", shape=rectangle, style=solid];
111[label="meta.input_qos_info.cos_rw == 1;", margin="", shape=rectangle, style=solid];
112[label="meta.eg_qos.cos_rw = 1;
...
meta.eg_qos.de = meta.input_qos_info.de;", margin="", shape=rectangle, style=solid];
113[label="meta.eg_qos.cos = (bit<3>)meta.ig_eg_header.ieth_cos;
meta.eg_qos.de = (bit<1>)meta.ig_eg_header.ieth_de;", margin="", shape=rectangle, style=solid];
114[label="meta.input_qos_info.tc_rw == 1;", margin="", shape=rectangle, style=solid];
115[label="meta.eg_qos.tc_rw = 1;
meta.eg_qos.tc = meta.input_qos_info.tc;", margin="", shape=rectangle, style=solid];
116[label="meta.eg_qos.tc = meta.ig_eg_header.ieth_tclass;", margin="", shape=rectangle, style=solid];
117[label="meta.eg_qos.qos_map_idx = meta.ig_eg_header.qos_map_idx;
meta.eg_qos.oqueue = meta.dp_eg_header.oqueue;", margin="", shape=rectangle, style=solid];
118[label="egress.process_eg_dst_bd_select.debug_process_eg_dst_bd_select", margin="", shape=ellipse, style=solid];
119[label="meta.CFG_aci_tor_mode.enable == 1;", margin="", shape=rectangle, style=solid];
120[label="meta.service_rw.epg_rw == 1;", margin="", shape=rectangle, style=solid];
121[label="meta.egress.epg_or_bd = meta.service_rw.epg;
...
meta.egress.dst_bd = 0;", margin="", shape=rectangle, style=solid];
122[label="meta.egress.use_met == 1;", margin="", shape=rectangle, style=solid];
123[label="meta.met.use_epg_in == 1;", margin="", shape=rectangle, style=solid];
124[label="meta.egress.epg_or_bd = meta.ig_eg_header.src_epg_or_bd;
...
meta.egress.dst_bd = meta.ig_eg_header.ieth_bd;", margin="", shape=rectangle, style=solid];
125[label="meta.met.use_bd == 1;", margin="", shape=rectangle, style=solid];
126[label="meta.egress.epg_or_bd = meta.met.bd;
...
meta.egress.dst_bd = meta.met.bd;", margin="", shape=rectangle, style=solid];
127[label="meta.egress.epg_or_bd = meta.met.epg;
...
meta.egress.dst_bd = meta.met.bd;", margin="", shape=rectangle, style=solid];
128[label="meta.ig_eg_header.vnid_use_bd == 1;", margin="", shape=rectangle, style=solid];
129[label="meta.egress.epg_or_bd = meta.ig_eg_header.ieth_bd;
...
meta.egress.dst_bd = meta.ig_eg_header.ieth_bd;", margin="", shape=rectangle, style=solid];
130[label="meta.egress.epg_or_bd = meta.ig_eg_header.dst_epg_or_bd;
...
meta.egress.dst_bd = meta.ig_eg_header.ieth_bd;", margin="", shape=rectangle, style=solid];
131[label="meta.egress.use_met == 1;", margin="", shape=rectangle, style=solid];
132[label="meta.met.use_in == 1 || meta.met.fm_bridge_only == 1;", margin="", shape=rectangle, style=solid];
133[label="meta.egress.epg_or_bd = meta.ig_eg_header.src_epg_or_bd;", margin="", shape=rectangle, style=solid];
134[label="meta.egress.epg_or_bd = meta.met.bd;", margin="", shape=rectangle, style=solid];
135[label="meta.egress.epg_or_bd = meta.ig_eg_header.ieth_bd;", margin="", shape=rectangle, style=solid];
136[label="meta.egress.tunnel_encap == 1;", margin="", shape=rectangle, style=solid];
137[label="meta.egress.inner_epg_or_bd = meta.egress.epg_or_bd;", margin="", shape=rectangle, style=solid];
138[label="meta.egress.outer_dst_bd = meta.egress.epg_or_bd;", margin="", shape=rectangle, style=solid];
139[label="egress.eg_dst_bd_state", margin="", shape=ellipse, style=solid];
140[label="meta.egress.l2_fwd_mode = meta.ig_eg_header.l2_fwd_mode;", margin="", shape=rectangle, style=solid];
141[label="meta.dp_eg_header.met_v == 1;", margin="", shape=rectangle, style=solid];
142[label="meta.met.force_route == 1;", margin="", shape=rectangle, style=solid];
143[label="meta.egress.l3_fwd_mode = 1;", margin="", shape=rectangle, style=solid];
144[label="meta.met.force_bridge == 1 || meta.met.fm_bridge_only == 1;", margin="", shape=rectangle, style=solid];
145[label="meta.egress.l3_fwd_mode = 0;", margin="", shape=rectangle, style=solid];
146[label="meta.egress.dst_bd == meta.ig_eg_header.ieth_bd;", margin="", shape=rectangle, style=solid];
147[label="meta.egress.l3_fwd_mode = 0;", margin="", shape=rectangle, style=solid];
148[label="meta.egress.l3_fwd_mode = 1;", margin="", shape=rectangle, style=solid];
149[label="meta.egress.l3_fwd_mode = meta.ig_eg_header.l3_fwd_mode;", margin="", shape=rectangle, style=solid];
150[label="meta.egress.dst_epg == meta.ig_eg_header.src_epg_or_bd;", margin="", shape=rectangle, style=solid];
151[label="meta.egress.same_epg = 1;", margin="", shape=rectangle, style=solid];
152[label="meta.egress.same_epg = 0;", margin="", shape=rectangle, style=solid];
153[label="meta.egress.l2_fwd_mode == 0;", margin="", shape=rectangle, style=solid];
154[label="meta.egress.l3_fwd_mode == 0;", margin="", shape=rectangle, style=solid];
155[label="meta.egress.same_bd = 1;", margin="", shape=rectangle, style=solid];
156[label="meta.egress.same_bd = 0;", margin="", shape=rectangle, style=solid];
157[label="meta.egress.dst_bd == meta.ig_eg_header.ieth_bd;", margin="", shape=rectangle, style=solid];
158[label="meta.egress.same_bd = 1;", margin="", shape=rectangle, style=solid];
159[label="meta.egress.same_bd = 0;", margin="", shape=rectangle, style=solid];
160[label="meta.CFG_aci_tor_mode.enable == 1;", margin="", shape=rectangle, style=solid];
161[label="meta.dp_eg_header.met_v == 1 && meta.met.epg_cross_drop == 1 && meta.ig_eg_header.block_epg_crossing == 1 && meta.dst_bd.sclass != meta.ig_eg_header.src_class;", margin="", shape=rectangle, style=solid];
162[label="meta.eg_drop.epg_cross = 1;", margin="", shape=rectangle, style=solid];
163[label="meta.eg_bypass.acl_bypass == 0;", margin="", shape=rectangle, style=solid];
164[label="meta.l3.l3_type == 1;", margin="", shape=rectangle, style=solid];
165[label="egress.process_egress_copp.egress_ipv4_copp", margin="", shape=ellipse, style=solid];
166[label="meta.l3.l3_type == 2;", margin="", shape=rectangle, style=solid];
167[label="egress.process_egress_copp.egress_ipv6_copp", margin="", shape=ellipse, style=solid];
168[label="egress.process_egress_copp.egress_mac_copp", margin="", shape=ellipse, style=solid];
169[label="meta.l3.l3_type == 1;", margin="", shape=rectangle, style=solid];
170[label="egress.process_egress_qos_tcam.egress_ipv4_qos", margin="", shape=ellipse, style=solid];
171[label="meta.l3.l3_type == 2;", margin="", shape=rectangle, style=solid];
172[label="egress.process_egress_qos_tcam.egress_ipv6_qos", margin="", shape=ellipse, style=solid];
173[label="egress.process_egress_qos_tcam.egress_mac_qos", margin="", shape=ellipse, style=solid];
174[label="egress.process_egress_qos_tcam.eg_output_qos_info", margin="", shape=ellipse, style=solid];
175[label="process_sgt_derivation_tmp_0/process_sgt_derivation_tmp = process_sgt_derivation_sclass_to_sgt_xlate_hash_tbl_0/process_sgt_derivation_sclass_to_sgt_xlate_hash_tbl.apply().hit;", margin="", shape=rectangle, style=solid];
176[label="!process_sgt_derivation_tmp_0/process_sgt_derivation_tmp;", margin="", shape=rectangle, style=solid];
177[label="meta.eg_drop.sclass_sgt_xlate_miss = 1;", margin="", shape=rectangle, style=solid];
178[label="meta.eg_bypass.cmd_bypass == 0;", margin="", shape=rectangle, style=solid];
179[label="meta.dst_bd.cts_en == 0;", margin="", shape=rectangle, style=solid];
180[label="meta.rewrite.cts_mode = 1;", margin="", shape=rectangle, style=solid];
181[label="meta.egress.tunnel_encap == 1;", margin="", shape=rectangle, style=solid];
182[label="meta.rewrite.cts_mode = meta.eg_tunnel.cts_mode;", margin="", shape=rectangle, style=solid];
183[label="meta.rewrite.cts_mode = meta.dst_if.cts_mode;", margin="", shape=rectangle, style=solid];
184[label="meta.rewrite.cts_mode == 1;", margin="", shape=rectangle, style=solid];
185[label="hdr.cmd.isValid();", margin="", shape=rectangle, style=solid];
186[label="hdr.qtag1.isValid();", margin="", shape=rectangle, style=solid];
187[label="hdr.qtag1.etherType = hdr.cmd_sgt.etherType;", margin="", shape=rectangle, style=solid];
188[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
189[label="hdr.qtag0.etherType = hdr.cmd_sgt.etherType;", margin="", shape=rectangle, style=solid];
190[label="hdr.vntag.isValid();", margin="", shape=rectangle, style=solid];
191[label="hdr.vntag.etherType = hdr.cmd_sgt.etherType;", margin="", shape=rectangle, style=solid];
192[label="hdr.ethernet.etherType = hdr.cmd_sgt.etherType;", margin="", shape=rectangle, style=solid];
193[label="hdr.cmd.setInvalid();
...
meta.rewrite.encap_ip_len = meta.rewrite.encap_ip_len + 65528;", margin="", shape=rectangle, style=solid];
194[label="meta.rewrite.cts_mode == 2;", margin="", shape=rectangle, style=solid];
195[label="hdr.cmd.isValid();", margin="", shape=rectangle, style=solid];
196[label="hdr.cmd.setValid();
...
meta.egress.pkt_len = meta.egress.pkt_len + 8;", margin="", shape=rectangle, style=solid];
197[label="hdr.qtag1.isValid();", margin="", shape=rectangle, style=solid];
198[label="hdr.cmd_sgt.etherType = hdr.qtag1.etherType;
hdr.qtag1.etherType = 34896;", margin="", shape=rectangle, style=solid];
199[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
200[label="hdr.cmd_sgt.etherType = hdr.qtag0.etherType;
hdr.qtag0.etherType = 34896;", margin="", shape=rectangle, style=solid];
201[label="hdr.vntag.isValid();", margin="", shape=rectangle, style=solid];
202[label="hdr.cmd_sgt.etherType = hdr.vntag.etherType;
hdr.vntag.etherType = 34896;", margin="", shape=rectangle, style=solid];
203[label="hdr.cmd_sgt.etherType = hdr.ethernet.etherType;
hdr.ethernet.etherType = 34896;", margin="", shape=rectangle, style=solid];
204[label="hdr.cmd.version = 1;
...
meta.rewrite.encap_ip_len = meta.rewrite.encap_ip_len + 8;", margin="", shape=rectangle, style=solid];
205[label="meta.eg_bypass.l2_rw_bypass == 0 && (meta.egress.l3_fwd_mode == 2 || meta.egress.l3_fwd_mode == 1);", margin="", shape=rectangle, style=solid];
206[label="egress.process_mac_rewrite.smac_rewrite", margin="", shape=ellipse, style=solid];
207[label="meta.service_rw.dmac_rw == 1;", margin="", shape=rectangle, style=solid];
208[label="hdr.ethernet.dstAddr = meta.service_rw.dmac;", margin="", shape=rectangle, style=solid];
209[label="meta.egress.l2_fwd_mode == 0 || meta.egress.l2_fwd_mode == 3;", margin="", shape=rectangle, style=solid];
210[label="hdr.ethernet.dstAddr = meta.ig_eg_header.dmac;", margin="", shape=rectangle, style=solid];
211[label="meta.egress.l2_fwd_mode == 1;", margin="", shape=rectangle, style=solid];
212[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
213[label="hdr.ethernet.dstAddr[47:23] = 131260;
hdr.ethernet.dstAddr[22:0] = hdr.ipv4.dstAddr[22:0];", margin="", shape=rectangle, style=solid];
214[label="hdr.ethernet.dstAddr[47:23] = 6710784;
hdr.ethernet.dstAddr[31:0] = hdr.ipv6.dstAddr[31:0];", margin="", shape=rectangle, style=solid];
215[label="meta.eg_bypass.qos_rw_bypass == 0;", margin="", shape=rectangle, style=solid];
216[label="meta.eg_qos.dscp_rw == 1;", margin="", shape=rectangle, style=solid];
217[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
218[label="hdr.ipv4.dscp = meta.eg_qos.dscp;", margin="", shape=rectangle, style=solid];
219[label="hdr.ipv6.dscp = meta.eg_qos.dscp;", margin="", shape=rectangle, style=solid];
220[label="meta.eg_qos.cos_rw == 1;", margin="", shape=rectangle, style=solid];
221[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
222[label="hdr.qtag0.pcp = meta.eg_qos.cos;
hdr.qtag0.cfi = meta.eg_qos.de;", margin="", shape=rectangle, style=solid];
223[label="hdr.qtag1.isValid();", margin="", shape=rectangle, style=solid];
224[label="hdr.qtag1.pcp = meta.eg_qos.cos;
hdr.qtag1.cfi = meta.eg_qos.de;", margin="", shape=rectangle, style=solid];
225[label="meta.eg_qos.tc_rw == 1;", margin="", shape=rectangle, style=solid];
226[label="hdr.ieth.tclass = meta.eg_qos.tc;", margin="", shape=rectangle, style=solid];
227[label="meta.egress.tunnel_decap == 1 && (meta.ig_eg_header.ttl_coi == 1 && meta.eg_local.outer_src_ttl < meta.l3.lkp_ip_ttl || !(hdr.ipv4.isValid() || hdr.ipv6.isValid()));", margin="", shape=rectangle, style=solid];
228[label="meta.eg_local.chosen_ttl = meta.eg_local.outer_src_ttl;", margin="", shape=rectangle, style=solid];
229[label="meta.eg_local.chosen_ttl = meta.l3.lkp_ip_ttl;", margin="", shape=rectangle, style=solid];
230[label="meta.egress.l3_fwd_mode == 1 && meta.eg_bypass.ttl_dec_bypass == 0;", margin="", shape=rectangle, style=solid];
231[label="meta.eg_local.chosen_ttl != 0;", margin="", shape=rectangle, style=solid];
232[label="meta.eg_local.final_ttl = meta.eg_local.chosen_ttl + 255;", margin="", shape=rectangle, style=solid];
233[label="meta.eg_local.chosen_ttl == 1;", margin="", shape=rectangle, style=solid];
234[label="meta.eg_drop.ttl_expired = 1;", margin="", shape=rectangle, style=solid];
235[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
236[label="hdr.ipv4.ttl = meta.eg_local.final_ttl;", margin="", shape=rectangle, style=solid];
237[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
238[label="hdr.ipv6.hopLimit = meta.eg_local.final_ttl;", margin="", shape=rectangle, style=solid];
239[label="meta.eg_local.span_dir == 1;", margin="", shape=rectangle, style=solid];
240[label="meta.eg_local.erspan_vlan = meta.eg_local.dst_qtag0_vid;
meta.eg_local.erspan_cos = meta.eg_local.dst_qtag0_pcp;", margin="", shape=rectangle, style=solid];
241[label="meta.eg_local.dst_qtag0_vld == 1;", margin="", shape=rectangle, style=solid];
242[label="meta.eg_local.erspan_en = 2;", margin="", shape=rectangle, style=solid];
243[label="meta.eg_local.erspan_en = 0;", margin="", shape=rectangle, style=solid];
244[label="meta.eg_local.erspan_vlan = meta.eg_local.dst_qtag0_vid;
meta.eg_local.erspan_cos = meta.eg_local.dst_qtag0_pcp;", margin="", shape=rectangle, style=solid];
245[label="meta.eg_local.src_qtag0_vld == 1;", margin="", shape=rectangle, style=solid];
246[label="meta.eg_local.erspan_en = 2;", margin="", shape=rectangle, style=solid];
247[label="meta.eg_local.erspan_en = 0;", margin="", shape=rectangle, style=solid];
248[label="meta.eg_local.span_dir == 1;", margin="", shape=rectangle, style=solid];
249[label="meta.eg_local.erspan_idx = (bit<20>)meta.dp_eg_header.oport;", margin="", shape=rectangle, style=solid];
250[label="meta.eg_local.erspan_idx = (bit<20>)meta.ig_eg_header.ieth_src_port;", margin="", shape=rectangle, style=solid];
251[label="process_erspan_fields_erspan_seq_num_0/process_erspan_fields_erspan_seq_num.read(meta.eg_local.erspan_seq_num, (bit<32>)meta.eg_local.erspan_ses);", margin="", shape=rectangle, style=solid];
252[label="meta.egress.tunnel_encap == 1;", margin="", shape=rectangle, style=solid];
253[label="egress.process_tunnel_encap_rewrite.encap_rewrite", margin="", shape=ellipse, style=solid];
254[label="meta.eg_tunnel.l3_tunnel_encap == 0;", margin="", shape=rectangle, style=solid];
255[label="egress.process_tunnel_encap_rewrite.process_egress_vnid_xlate.dst_vnid_xlate_hash_table", margin="", shape=ellipse, style=solid];
256[label="meta.eg_tunnel.dst_encap_l4_type == 6;", margin="", shape=rectangle, style=solid];
257[label="egress.process_tunnel_encap_rewrite.process_mpls_rewrite.mpls_ttl_rw", margin="", shape=ellipse, style=solid];
258[label="egress.process_tunnel_encap_rewrite.process_mpls_rewrite.mpls_label_rw", margin="", shape=ellipse, style=solid];
259[label="egress.process_tunnel_encap_rewrite.process_mpls_rewrite.mpls_label_op", margin="", shape=ellipse, style=solid];
260[label="hdr.tcp.isValid();", margin="", shape=rectangle, style=solid];
261[label="hdr.inner_tcp = hdr.tcp;
hdr.tcp.setInvalid();", margin="", shape=rectangle, style=solid];
262[label="hdr.udp.isValid();", margin="", shape=rectangle, style=solid];
263[label="hdr.inner_udp = hdr.udp;
hdr.udp.setInvalid();", margin="", shape=rectangle, style=solid];
264[label="hdr.icmp.isValid();", margin="", shape=rectangle, style=solid];
265[label="hdr.inner_icmp = hdr.icmp;
hdr.icmp.setInvalid();", margin="", shape=rectangle, style=solid];
266[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
267[label="hdr.inner_ipv4 = hdr.ipv4;
hdr.ipv4.setInvalid();", margin="", shape=rectangle, style=solid];
268[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
269[label="hdr.inner_ipv6 = hdr.ipv6;
hdr.ipv6.setInvalid();", margin="", shape=rectangle, style=solid];
270[label="hdr.fcoe.isValid();", margin="", shape=rectangle, style=solid];
271[label="hdr.inner_fcoe = hdr.fcoe;
hdr.fcoe.setInvalid();", margin="", shape=rectangle, style=solid];
272[label="meta.eg_tunnel.l3_tunnel_encap == 1;", margin="", shape=rectangle, style=solid];
273[label="hdr.vntag.isValid();", margin="", shape=rectangle, style=solid];
274[label="hdr.vntag.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65530;", margin="", shape=rectangle, style=solid];
275[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
276[label="hdr.qtag0.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65532;", margin="", shape=rectangle, style=solid];
277[label="hdr.qtag1.isValid();", margin="", shape=rectangle, style=solid];
278[label="hdr.qtag1.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65532;", margin="", shape=rectangle, style=solid];
279[label="hdr.cmd.isValid();", margin="", shape=rectangle, style=solid];
280[label="hdr.cmd.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65528;", margin="", shape=rectangle, style=solid];
281[label="hdr.timestamp.isValid();", margin="", shape=rectangle, style=solid];
282[label="hdr.timestamp.setInvalid();
meta.egress.pkt_len = meta.egress.pkt_len + 65528;", margin="", shape=rectangle, style=solid];
283[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
284[label="hdr.inner_qtag0 = hdr.qtag0;
hdr.qtag0.setInvalid();", margin="", shape=rectangle, style=solid];
285[label="hdr.cmd.isValid();", margin="", shape=rectangle, style=solid];
286[label="hdr.inner_cmd = hdr.cmd;
hdr.cmd.setInvalid();", margin="", shape=rectangle, style=solid];
287[label="hdr.timestamp.isValid();", margin="", shape=rectangle, style=solid];
288[label="hdr.inner_timestamp = hdr.timestamp;
hdr.timestamp.setInvalid();", margin="", shape=rectangle, style=solid];
289[label="egress.process_tunnel_encap_rewrite.encap_ip_tunnel_header", margin="", shape=ellipse, style=solid];
290[label="meta.eg_tunnel.dst_encap_l3_type == 1;", margin="", shape=rectangle, style=solid];
291[label="egress.process_tunnel_encap_rewrite.encap_outer_ipv4_sip", margin="", shape=ellipse, style=solid];
292[label="egress.process_tunnel_encap_rewrite.encap_outer_ipv4_dip", margin="", shape=ellipse, style=solid];
293[label="meta.eg_tunnel.dst_encap_l3_type == 2;", margin="", shape=rectangle, style=solid];
294[label="egress.process_tunnel_encap_rewrite.encap_outer_ipv6_sip", margin="", shape=ellipse, style=solid];
295[label="egress.process_tunnel_encap_rewrite.encap_outer_ipv6_dip", margin="", shape=ellipse, style=solid];
296[label="meta.eg_tunnel.ttl_cio == 0;", margin="", shape=rectangle, style=solid];
297[label="meta.eg_local.outer_dst_ttl = 64;", margin="", shape=rectangle, style=solid];
298[label="meta.eg_local.chosen_ttl != 0;", margin="", shape=rectangle, style=solid];
299[label="meta.eg_local.outer_dst_ttl = meta.eg_local.chosen_ttl + 255;", margin="", shape=rectangle, style=solid];
300[label="meta.eg_local.chosen_ttl == 1;", margin="", shape=rectangle, style=solid];
301[label="meta.eg_drop.ttl_expired = 1;", margin="", shape=rectangle, style=solid];
302[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
303[label="hdr.ipv4.ttl = meta.eg_local.outer_dst_ttl;", margin="", shape=rectangle, style=solid];
304[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
305[label="hdr.ipv6.hopLimit = meta.eg_local.outer_dst_ttl;", margin="", shape=rectangle, style=solid];
306[label="egress.process_tunnel_encap_rewrite.encap_outer_dmac", margin="", shape=ellipse, style=solid];
307[label="egress.process_tunnel_encap_rewrite.encap_outer_smac", margin="", shape=ellipse, style=solid];
308[label="egress.outer_dst_bd_state", margin="", shape=ellipse, style=solid];
309[label="process_egress_vlan_xlate_tmp_0/process_egress_vlan_xlate_tmp = process_egress_vlan_xlate_egress_vlan_xlate_table_0/process_egress_vlan_xlate_egress_vlan_xlate_table.apply().hit;", margin="", shape=rectangle, style=solid];
310[label="!process_egress_vlan_xlate_tmp_0/process_egress_vlan_xlate_tmp;", margin="", shape=rectangle, style=solid];
311[label="meta.eg_drop.vlan_xlate_miss = 1;", margin="", shape=rectangle, style=solid];
312[label="meta.eg_local.encap_vlan == meta.dst_if.default_vlan;", margin="", shape=rectangle, style=solid];
313[label="meta.eg_local.encap_vlan = 0;", margin="", shape=rectangle, style=solid];
314[label="meta.eg_bypass.qtag_bypass == 0;", margin="", shape=rectangle, style=solid];
315[label="egress.process_egress_vlan_rewrite.egress_vlan_rewrite", margin="", shape=ellipse, style=solid];
316[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
317[label="meta.eg_local.dst_qtag0_vld = 1;
...
meta.eg_local.dst_qtag0_pcp = hdr.qtag0.pcp;", margin="", shape=rectangle, style=solid];
318[label="meta.egress.tunnel_encap == 1;", margin="", shape=rectangle, style=solid];
319[label="meta.eg_bypass.qos_rw_bypass == 0;", margin="", shape=rectangle, style=solid];
320[label="meta.eg_qos.ol_dscp_rw == 1;", margin="", shape=rectangle, style=solid];
321[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
322[label="meta.eg_qos.dscp_cio == 1 && hdr.inner_ipv4.isValid();", margin="", shape=rectangle, style=solid];
323[label="hdr.ipv4.dscp = hdr.inner_ipv4.dscp;", margin="", shape=rectangle, style=solid];
324[label="meta.eg_qos.dscp_cio == 1 && hdr.inner_ipv4.isValid();", margin="", shape=rectangle, style=solid];
325[label="hdr.ipv4.dscp = hdr.inner_ipv4.dscp;", margin="", shape=rectangle, style=solid];
326[label="hdr.ipv4.dscp = meta.eg_qos.ol_dscp;", margin="", shape=rectangle, style=solid];
327[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
328[label="meta.eg_qos.dscp_cio == 1 && hdr.inner_ipv4.isValid();", margin="", shape=rectangle, style=solid];
329[label="hdr.ipv6.dscp = hdr.inner_ipv6.dscp;", margin="", shape=rectangle, style=solid];
330[label="meta.eg_qos.dscp_cio == 1 && hdr.inner_ipv6.isValid();", margin="", shape=rectangle, style=solid];
331[label="hdr.ipv6.dscp = hdr.inner_ipv6.dscp;", margin="", shape=rectangle, style=solid];
332[label="hdr.ipv6.dscp = meta.eg_qos.ol_dscp;", margin="", shape=rectangle, style=solid];
333[label="meta.eg_qos.ol_cos_rw == 1;", margin="", shape=rectangle, style=solid];
334[label="hdr.qtag0.isValid();", margin="", shape=rectangle, style=solid];
335[label="hdr.qtag0.pcp = meta.eg_qos.ol_cos;
hdr.qtag0.cfi = meta.eg_qos.ol_de;", margin="", shape=rectangle, style=solid];
336[label="meta.ig_tunnel.src_encap_type == meta.eg_tunnel.dst_encap_type;", margin="", shape=rectangle, style=solid];
337[label="meta.egress.same_encap = 1;", margin="", shape=rectangle, style=solid];
338[label="meta.egress.same_encap = 0;", margin="", shape=rectangle, style=solid];
339[label="meta.rewrite.vntag_loop = 0;", margin="", shape=rectangle, style=solid];
340[label="meta.egress.l3_fwd_mode == 0 && meta.egress.same_encap == 1 && meta.egress.same_bd == 1 && meta.egress.same_epg == 1 && meta.dst_bd.bypass_self_fwd_check == 0 && meta.eg_bypass.same_if_check_bypass == 0 && (meta.egress.use_met == 0 || meta.met.same_if_check_bypass == 0);", margin="", shape=rectangle, style=solid];
341[label="meta.dst_port.vnic_if == 1;", margin="", shape=rectangle, style=solid];
342[label="meta.eg_src_port.vnic_if == 1;", margin="", shape=rectangle, style=solid];
343[label="meta.rewrite.vntag_loop = 1;", margin="", shape=rectangle, style=solid];
344[label="meta.dst_port.pcnum == meta.eg_src_port.pcnum;", margin="", shape=rectangle, style=solid];
345[label="meta.eg_drop.same_if_check = 1;", margin="", shape=rectangle, style=solid];
346[label="meta.egress.l3_fwd_mode == 0 && meta.egress.same_encap == 1 && meta.dst_bd.bypass_same_vtep_check == 0 && meta.dst_if.same_vtep_prune_en == 1 && (meta.egress.tunnel_decap == 1 && meta.egress.tunnel_encap == 1) && (hdr.ipv4.isValid() && meta.eg_local.outer_ipv4_sa == hdr.ipv4.dstAddr);", margin="", shape=rectangle, style=solid];
347[label="meta.eg_drop.same_vtep = 1;", margin="", shape=rectangle, style=solid];
348[label="meta.eg_drop.same_vtep = 0;", margin="", shape=rectangle, style=solid];
349[label="meta.eg_bypass.vntag_bypass == 0 && meta.dst_port.vnic_if == 1;", margin="", shape=rectangle, style=solid];
350[label="process_vntag_rewrite_process_derive_vntag_svif_tmp_0/process_vntag_rewrite_process_derive_vntag_svif_tmp = process_vntag_rewrite_process_derive_vntag_svif_svif_hash_table_0/process_vntag_rewrite_process_derive_vntag_svif_svif_hash_table.apply().hit;", margin="", shape=rectangle, style=solid];
351[label="!process_vntag_rewrite_process_derive_vntag_svif_tmp_0/process_vntag_rewrite_process_derive_vntag_svif_tmp;", margin="", shape=rectangle, style=solid];
352[label="meta.eg_drop.svif_xlate_miss = 1;", margin="", shape=rectangle, style=solid];
353[label="meta.egress.l2_fwd_mode == 0;", margin="", shape=rectangle, style=solid];
354[label="process_vntag_rewrite_process_derive_vntag_uc_dvif_tmp_0/process_vntag_rewrite_process_derive_vntag_uc_dvif_tmp = process_vntag_rewrite_process_derive_vntag_uc_dvif_uc_dvif_hash_table_0/process_vntag_rewrite_process_derive_vntag_uc_dvif_uc_dvif_hash_table.apply().hit;", margin="", shape=rectangle, style=solid];
355[label="!process_vntag_rewrite_process_derive_vntag_uc_dvif_tmp_0/process_vntag_rewrite_process_derive_vntag_uc_dvif_tmp;", margin="", shape=rectangle, style=solid];
356[label="meta.eg_drop.uc_dvif_xlate_miss = 1;", margin="", shape=rectangle, style=solid];
357[label="meta.egress.copy_service == 1;", margin="", shape=rectangle, style=solid];
358[label="meta.eg_local.mc_dvif_key_alt_vntag = 0;", margin="", shape=rectangle, style=solid];
359[label="meta.ig_eg_header.ieth_vpc_df == 0;", margin="", shape=rectangle, style=solid];
360[label="meta.eg_local.mc_dvif_key_alt_vntag = 1;", margin="", shape=rectangle, style=solid];
361[label="meta.dp_eg_header.met_v == 1;", margin="", shape=rectangle, style=solid];
362[label="meta.eg_local.mc_dvif_key_mc_idx = meta.met.ovector_idx;", margin="", shape=rectangle, style=solid];
363[label="meta.eg_local.mc_dvif_key_mc_idx[12:0] = (bit<13>)meta.dp_eg_header.met_index;", margin="", shape=rectangle, style=solid];
364[label="process_vntag_rewrite_process_derive_vntag_mc_dvif_tmp_0/process_vntag_rewrite_process_derive_vntag_mc_dvif_tmp = process_vntag_rewrite_process_derive_vntag_mc_dvif_mc_dvif_hash_table_0/process_vntag_rewrite_process_derive_vntag_mc_dvif_mc_dvif_hash_table.apply().hit;", margin="", shape=rectangle, style=solid];
365[label="!process_vntag_rewrite_process_derive_vntag_mc_dvif_tmp_0/process_vntag_rewrite_process_derive_vntag_mc_dvif_tmp;", margin="", shape=rectangle, style=solid];
366[label="meta.eg_drop.mc_dvif_xlate_miss = 1;", margin="", shape=rectangle, style=solid];
367[label="hdr.vntag.setValid();
...
hdr.vntag.version = 0;", margin="", shape=rectangle, style=solid];
368[label="meta.egress.l2_fwd_mode == 0;", margin="", shape=rectangle, style=solid];
369[label="hdr.vntag.pointer = 0;
hdr.vntag.destVif = (bit<14>)meta.rewrite.uc_dvif;", margin="", shape=rectangle, style=solid];
370[label="hdr.vntag.pointer = 1;
hdr.vntag.destVif = meta.rewrite.mc_dvif;", margin="", shape=rectangle, style=solid];
371[label="meta.rewrite.vntag_loop == 1;", margin="", shape=rectangle, style=solid];
372[label="hdr.vntag.looped = 1;
hdr.vntag.srcVif = meta.rewrite.svif;", margin="", shape=rectangle, style=solid];
373[label="meta.eg_bypass.vlan_mbr_chk_bypass == 0;", margin="", shape=rectangle, style=solid];
374[label="egress.process_dst_vlan_mbr_check.dst_vlan_mbr", margin="", shape=ellipse, style=solid];
375[label="meta.eg_bypass.switchport_block_bypass == 0;", margin="", shape=rectangle, style=solid];
376[label="meta.ig_eg_header.l2_fwd_mode == 3;", margin="", shape=rectangle, style=solid];
377[label="hdr.ethernet.dstAddr == 281474976710655 && meta.dst_port.block_bc == 1;", margin="", shape=rectangle, style=solid];
378[label="meta.eg_drop.switchport_block_bc = 1;", margin="", shape=rectangle, style=solid];
379[label="hdr.ethernet.dstAddr & 1099511627776 == 0 && meta.dst_port.block_uuc == 1;", margin="", shape=rectangle, style=solid];
380[label="meta.eg_drop.switchport_block_uuc = 1;", margin="", shape=rectangle, style=solid];
381[label="meta.dst_port.block_umc == 1;", margin="", shape=rectangle, style=solid];
382[label="meta.eg_drop.switchport_block_umc = 1;", margin="", shape=rectangle, style=solid];
383[label="meta.eg_drop.acl_deny == 1 || meta.eg_drop.switchport_block_bc == 1 || meta.eg_drop.switchport_block_umc == 1 || meta.eg_drop.switchport_block_uuc == 1 || meta.eg_drop.vlan_mbr == 1 || meta.eg_drop.same_if_check == 1 || meta.eg_drop.mc_dvif_xlate_miss == 1 || meta.eg_drop.uc_dvif_xlate_miss == 1 || meta.eg_drop.vlan_xlate_miss == 1 || meta.eg_drop.vnid_xlate_miss == 1 || meta.eg_drop.same_vtep == 1 || meta.eg_drop.epg_cross == 1 || meta.eg_drop.svif_xlate_miss == 1 || meta.eg_drop.qos_drop == 1;", margin="", shape=rectangle, style=solid];
384[label="meta.eg_dp_header.drop = 1;", margin="", shape=rectangle, style=solid];
385[label="meta.eg_drop.acl_deny == 1 || meta.eg_drop.switchport_block_bc == 1 || meta.eg_drop.switchport_block_umc == 1 || meta.eg_drop.switchport_block_uuc == 1 || meta.eg_drop.vlan_mbr == 1 || meta.eg_drop.same_if_check == 1 || meta.eg_drop.same_vif_uc == 1 || meta.eg_drop.ttl_expired == 1 || meta.eg_drop.sup_policer_drop == 1 || meta.eg_drop.mc_dvif_xlate_miss == 1 || meta.eg_drop.uc_dvif_xlate_miss == 1 || meta.eg_drop.vlan_xlate_miss == 1 || meta.eg_drop.vnid_xlate_miss == 1 || meta.eg_drop.mc_met_core_if_prune == 1 || meta.eg_drop.l3_same_if_mc == 1 || meta.eg_drop.sup_tx_mask == 1 || meta.eg_drop.same_vtep == 1 || meta.eg_drop.sclass_sgt_xlate_miss == 1 || meta.eg_drop.epg_cross == 1 || meta.eg_drop.svif_xlate_miss == 1 || meta.eg_drop.qos_drop == 1 || meta.eg_drop.qos_policer_drop == 1;", margin="", shape=rectangle, style=solid];
386[label="meta.eg_drop.inc_drop_counters = 1;", margin="", shape=rectangle, style=solid];
387[label="meta.eg_local.dst_port_stats_idx = (bit<13>)meta.dp_eg_header.oport;
...
meta.eg_local.dst_port_class_stats_idx = (bit<11>)meta.dp_eg_header.oport;", margin="", shape=rectangle, style=solid];
388[label="hdr.fcoe.isValid();", margin="", shape=rectangle, style=solid];
389[label="meta.eg_local.dst_port_class_stats_idx = meta.eg_local.dst_port_class_stats_idx << 1;", margin="", shape=rectangle, style=solid];
390[label="meta.eg_local.dst_port_class_stats_idx = meta.eg_local.dst_port_class_stats_idx << meta.dp_eg_header.oqueue;
...
meta.eg_local.dst_tep_stats_idx = meta.eg_local.dst_tep_stats_idx << meta.dst_port.fabric_if_stats_idx;", margin="", shape=rectangle, style=solid];
0 -> 2[label=""];
2 -> 3[label=""];
3 -> 4[label=""];
4 -> 5[label=TRUE];
4 -> 6[label=FALSE];
5 -> 6[label=""];
6 -> 7[label=""];
7 -> 8[label=TRUE];
7 -> 9[label=FALSE];
8 -> 10[label=""];
9 -> 10[label=""];
10 -> 11[label=""];
11 -> 12[label=TRUE];
11 -> 14[label=FALSE];
12 -> 13[label=TRUE];
12 -> 14[label=FALSE];
13 -> 14[label=""];
14 -> 15[label=TRUE];
14 -> 16[label=FALSE];
15 -> 16[label=""];
16 -> 17[label=TRUE];
16 -> 21[label=FALSE];
17 -> 18[label=TRUE];
17 -> 19[label=FALSE];
18 -> 20[label=""];
19 -> 20[label=""];
20 -> 21[label=""];
21 -> 22[label=TRUE];
21 -> 30[label=FALSE];
22 -> 23[label=TRUE];
22 -> 24[label=FALSE];
23 -> 25[label=""];
24 -> 25[label=""];
25 -> 26[label=TRUE];
25 -> 27[label=FALSE];
26 -> 30[label=""];
27 -> 28[label=TRUE];
27 -> 29[label=FALSE];
28 -> 30[label=""];
29 -> 30[label=""];
30 -> 31[label=TRUE];
30 -> 32[label=FALSE];
31 -> 33[label=""];
32 -> 33[label=""];
33 -> 34[label=TRUE];
33 -> 35[label=FALSE];
34 -> 35[label=""];
35 -> 36[label=TRUE];
35 -> 81[label=FALSE];
36 -> 37[label=""];
37 -> 38[label=TRUE];
37 -> 39[label=FALSE];
38 -> 39[label=""];
39 -> 40[label=TRUE];
39 -> 41[label=FALSE];
40 -> 41[label=""];
41 -> 42[label=TRUE];
41 -> 43[label=FALSE];
42 -> 43[label=""];
43 -> 44[label=TRUE];
43 -> 45[label=FALSE];
44 -> 45[label=""];
45 -> 46[label=TRUE];
45 -> 47[label=FALSE];
46 -> 47[label=""];
47 -> 48[label=TRUE];
47 -> 49[label=FALSE];
48 -> 49[label=""];
49 -> 50[label=TRUE];
49 -> 51[label=FALSE];
50 -> 53[label=""];
51 -> 52[label=TRUE];
51 -> 53[label=FALSE];
52 -> 53[label=""];
53 -> 54[label=TRUE];
53 -> 55[label=FALSE];
54 -> 55[label=""];
55 -> 56[label=TRUE];
55 -> 57[label=FALSE];
56 -> 57[label=""];
57 -> 58[label=TRUE];
57 -> 59[label=FALSE];
58 -> 59[label=""];
59 -> 60[label=""];
60 -> 61[label=TRUE];
60 -> 62[label=FALSE];
61 -> 62[label=""];
62 -> 63[label=TRUE];
62 -> 64[label=FALSE];
63 -> 64[label=""];
64 -> 65[label=TRUE];
64 -> 66[label=FALSE];
65 -> 66[label=""];
66 -> 67[label=TRUE];
66 -> 68[label=FALSE];
67 -> 68[label=""];
68 -> 69[label=TRUE];
68 -> 70[label=FALSE];
69 -> 70[label=""];
70 -> 71[label=TRUE];
70 -> 72[label=FALSE];
71 -> 72[label=""];
72 -> 73[label=TRUE];
72 -> 74[label=FALSE];
73 -> 75[label=""];
74 -> 75[label=""];
75 -> 76[label=TRUE];
75 -> 77[label=FALSE];
76 -> 77[label=""];
77 -> 78[label=TRUE];
77 -> 79[label=FALSE];
78 -> 79[label=""];
79 -> 80[label=TRUE];
79 -> 81[label=FALSE];
80 -> 81[label=""];
81 -> 82[label=""];
82 -> 83[label=""];
83 -> 84[label=TRUE];
83 -> 85[label=FALSE];
84 -> 86[label=""];
85 -> 86[label=""];
86 -> 87[label=""];
87 -> 88[label=TRUE];
87 -> 89[label=FALSE];
88 -> 89[label=""];
89 -> 90[label=TRUE];
89 -> 104[label=FALSE];
90 -> 91[label=TRUE];
90 -> 96[label=FALSE];
91 -> 92[label=""];
92 -> 93[label=TRUE];
92 -> 94[label=FALSE];
93 -> 94[label=""];
94 -> 95[label=TRUE];
94 -> 96[label=FALSE];
95 -> 96[label=""];
96 -> 97[label=TRUE];
96 -> 100[label=FALSE];
97 -> 98[label=TRUE];
97 -> 99[label=FALSE];
98 -> 100[label=""];
99 -> 100[label=""];
100 -> 101[label=TRUE];
100 -> 104[label=FALSE];
101 -> 102[label=TRUE];
101 -> 103[label=FALSE];
102 -> 104[label=""];
103 -> 104[label=""];
104 -> 105[label=""];
105 -> 106[label=TRUE];
105 -> 110[label=FALSE];
106 -> 107[label=""];
107 -> 108[label=TRUE];
107 -> 109[label=FALSE];
108 -> 111[label=""];
109 -> 111[label=""];
110 -> 111[label=""];
111 -> 112[label=TRUE];
111 -> 113[label=FALSE];
112 -> 114[label=""];
113 -> 114[label=""];
114 -> 115[label=TRUE];
114 -> 116[label=FALSE];
115 -> 117[label=""];
116 -> 117[label=""];
117 -> 118[label=""];
118 -> 119[label=""];
119 -> 120[label=TRUE];
119 -> 131[label=FALSE];
120 -> 121[label=TRUE];
120 -> 122[label=FALSE];
121 -> 136[label=""];
122 -> 123[label=TRUE];
122 -> 128[label=FALSE];
123 -> 124[label=TRUE];
123 -> 125[label=FALSE];
124 -> 136[label=""];
125 -> 126[label=TRUE];
125 -> 127[label=FALSE];
126 -> 136[label=""];
127 -> 136[label=""];
128 -> 129[label=TRUE];
128 -> 130[label=FALSE];
129 -> 136[label=""];
130 -> 136[label=""];
131 -> 132[label=TRUE];
131 -> 135[label=FALSE];
132 -> 133[label=TRUE];
132 -> 134[label=FALSE];
133 -> 136[label=""];
134 -> 136[label=""];
135 -> 136[label=""];
136 -> 137[label=TRUE];
136 -> 138[label=FALSE];
137 -> 139[label=""];
138 -> 139[label=""];
139 -> 140[label=""];
140 -> 141[label=""];
141 -> 142[label=TRUE];
141 -> 149[label=FALSE];
142 -> 143[label=TRUE];
142 -> 144[label=FALSE];
143 -> 150[label=""];
144 -> 145[label=TRUE];
144 -> 146[label=FALSE];
145 -> 150[label=""];
146 -> 147[label=TRUE];
146 -> 148[label=FALSE];
147 -> 150[label=""];
148 -> 150[label=""];
149 -> 150[label=""];
150 -> 151[label=TRUE];
150 -> 152[label=FALSE];
151 -> 153[label=""];
152 -> 153[label=""];
153 -> 154[label=TRUE];
153 -> 157[label=FALSE];
154 -> 155[label=TRUE];
154 -> 156[label=FALSE];
155 -> 160[label=""];
156 -> 160[label=""];
157 -> 158[label=TRUE];
157 -> 159[label=FALSE];
158 -> 160[label=""];
159 -> 160[label=""];
160 -> 161[label=TRUE];
160 -> 163[label=FALSE];
161 -> 162[label=TRUE];
161 -> 163[label=FALSE];
162 -> 163[label=""];
163 -> 164[label=TRUE];
163 -> 169[label=FALSE];
164 -> 165[label=TRUE];
164 -> 166[label=FALSE];
165 -> 169[label=""];
166 -> 167[label=TRUE];
166 -> 168[label=FALSE];
167 -> 169[label=""];
168 -> 169[label=""];
169 -> 170[label=TRUE];
169 -> 171[label=FALSE];
170 -> 174[label=""];
171 -> 172[label=TRUE];
171 -> 173[label=FALSE];
172 -> 174[label=""];
173 -> 174[label=""];
174 -> 175[label=""];
175 -> 176[label=""];
176 -> 177[label=TRUE];
176 -> 178[label=FALSE];
177 -> 178[label=""];
178 -> 179[label=TRUE];
178 -> 205[label=FALSE];
179 -> 180[label=TRUE];
179 -> 181[label=FALSE];
180 -> 184[label=""];
181 -> 182[label=TRUE];
181 -> 183[label=FALSE];
182 -> 184[label=""];
183 -> 184[label=""];
184 -> 185[label=TRUE];
184 -> 194[label=FALSE];
185 -> 186[label=TRUE];
185 -> 205[label=FALSE];
186 -> 187[label=TRUE];
186 -> 188[label=FALSE];
187 -> 193[label=""];
188 -> 189[label=TRUE];
188 -> 190[label=FALSE];
189 -> 193[label=""];
190 -> 191[label=TRUE];
190 -> 192[label=FALSE];
191 -> 193[label=""];
192 -> 193[label=""];
193 -> 205[label=""];
194 -> 195[label=TRUE];
194 -> 205[label=FALSE];
195 -> 196[label=FALSE];
195 -> 205[label=TRUE];
196 -> 197[label=""];
197 -> 198[label=TRUE];
197 -> 199[label=FALSE];
198 -> 204[label=""];
199 -> 200[label=TRUE];
199 -> 201[label=FALSE];
200 -> 204[label=""];
201 -> 202[label=TRUE];
201 -> 203[label=FALSE];
202 -> 204[label=""];
203 -> 204[label=""];
204 -> 205[label=""];
205 -> 206[label=TRUE];
205 -> 215[label=FALSE];
206 -> 207[label=""];
207 -> 208[label=TRUE];
207 -> 209[label=FALSE];
208 -> 215[label=""];
209 -> 210[label=TRUE];
209 -> 211[label=FALSE];
210 -> 215[label=""];
211 -> 212[label=TRUE];
211 -> 215[label=FALSE];
212 -> 213[label=TRUE];
212 -> 214[label=FALSE];
213 -> 215[label=""];
214 -> 215[label=""];
215 -> 216[label=TRUE];
215 -> 227[label=FALSE];
216 -> 217[label=TRUE];
216 -> 220[label=FALSE];
217 -> 218[label=TRUE];
217 -> 219[label=FALSE];
218 -> 220[label=""];
219 -> 220[label=""];
220 -> 221[label=TRUE];
220 -> 225[label=FALSE];
221 -> 222[label=TRUE];
221 -> 223[label=FALSE];
222 -> 223[label=""];
223 -> 224[label=TRUE];
223 -> 225[label=FALSE];
224 -> 225[label=""];
225 -> 226[label=TRUE];
225 -> 227[label=FALSE];
226 -> 227[label=""];
227 -> 228[label=TRUE];
227 -> 229[label=FALSE];
228 -> 230[label=""];
229 -> 230[label=""];
230 -> 231[label=TRUE];
230 -> 239[label=FALSE];
231 -> 232[label=TRUE];
231 -> 233[label=FALSE];
232 -> 233[label=""];
233 -> 234[label=TRUE];
233 -> 235[label=FALSE];
234 -> 235[label=""];
235 -> 236[label=TRUE];
235 -> 237[label=FALSE];
236 -> 237[label=""];
237 -> 238[label=TRUE];
237 -> 239[label=FALSE];
238 -> 239[label=""];
239 -> 240[label=TRUE];
239 -> 244[label=FALSE];
240 -> 241[label=""];
241 -> 242[label=TRUE];
241 -> 243[label=FALSE];
242 -> 248[label=""];
243 -> 248[label=""];
244 -> 245[label=""];
245 -> 246[label=TRUE];
245 -> 247[label=FALSE];
246 -> 248[label=""];
247 -> 248[label=""];
248 -> 249[label=TRUE];
248 -> 250[label=FALSE];
249 -> 251[label=""];
250 -> 251[label=""];
251 -> 252[label=""];
252 -> 253[label=TRUE];
252 -> 308[label=FALSE];
253 -> 254[label=""];
254 -> 255[label=TRUE];
254 -> 256[label=FALSE];
255 -> 256[label=""];
256 -> 257[label=TRUE];
256 -> 260[label=FALSE];
257 -> 258[label=""];
258 -> 259[label=""];
259 -> 308[label=""];
260 -> 261[label=TRUE];
260 -> 262[label=FALSE];
261 -> 262[label=""];
262 -> 263[label=TRUE];
262 -> 264[label=FALSE];
263 -> 264[label=""];
264 -> 265[label=TRUE];
264 -> 266[label=FALSE];
265 -> 266[label=""];
266 -> 267[label=TRUE];
266 -> 268[label=FALSE];
267 -> 268[label=""];
268 -> 269[label=TRUE];
268 -> 270[label=FALSE];
269 -> 270[label=""];
270 -> 271[label=TRUE];
270 -> 272[label=FALSE];
271 -> 272[label=""];
272 -> 273[label=TRUE];
272 -> 283[label=FALSE];
273 -> 274[label=TRUE];
273 -> 275[label=FALSE];
274 -> 275[label=""];
275 -> 276[label=TRUE];
275 -> 277[label=FALSE];
276 -> 277[label=""];
277 -> 278[label=TRUE];
277 -> 279[label=FALSE];
278 -> 279[label=""];
279 -> 280[label=TRUE];
279 -> 281[label=FALSE];
280 -> 281[label=""];
281 -> 282[label=TRUE];
281 -> 289[label=FALSE];
282 -> 289[label=""];
283 -> 284[label=TRUE];
283 -> 285[label=FALSE];
284 -> 285[label=""];
285 -> 286[label=TRUE];
285 -> 287[label=FALSE];
286 -> 287[label=""];
287 -> 288[label=TRUE];
287 -> 289[label=FALSE];
288 -> 289[label=""];
289 -> 290[label=""];
290 -> 291[label=TRUE];
290 -> 293[label=FALSE];
291 -> 292[label=""];
292 -> 296[label=""];
293 -> 294[label=TRUE];
293 -> 296[label=FALSE];
294 -> 295[label=""];
295 -> 296[label=""];
296 -> 297[label=TRUE];
296 -> 298[label=FALSE];
297 -> 306[label=""];
298 -> 299[label=TRUE];
298 -> 300[label=FALSE];
299 -> 300[label=""];
300 -> 301[label=TRUE];
300 -> 302[label=FALSE];
301 -> 302[label=""];
302 -> 303[label=TRUE];
302 -> 304[label=FALSE];
303 -> 304[label=""];
304 -> 305[label=TRUE];
304 -> 306[label=FALSE];
305 -> 306[label=""];
306 -> 307[label=""];
307 -> 308[label=""];
308 -> 309[label=""];
309 -> 310[label=""];
310 -> 311[label=TRUE];
310 -> 312[label=FALSE];
311 -> 312[label=""];
312 -> 313[label=TRUE];
312 -> 314[label=FALSE];
313 -> 314[label=""];
314 -> 315[label=TRUE];
314 -> 316[label=FALSE];
315 -> 316[label=""];
316 -> 317[label=TRUE];
316 -> 318[label=FALSE];
317 -> 318[label=""];
318 -> 319[label=TRUE];
318 -> 336[label=FALSE];
319 -> 320[label=TRUE];
319 -> 336[label=FALSE];
320 -> 321[label=TRUE];
320 -> 333[label=FALSE];
321 -> 322[label=TRUE];
321 -> 327[label=FALSE];
322 -> 323[label=TRUE];
322 -> 324[label=FALSE];
323 -> 333[label=""];
324 -> 325[label=TRUE];
324 -> 326[label=FALSE];
325 -> 333[label=""];
326 -> 333[label=""];
327 -> 328[label=TRUE];
327 -> 333[label=FALSE];
328 -> 329[label=TRUE];
328 -> 330[label=FALSE];
329 -> 333[label=""];
330 -> 331[label=TRUE];
330 -> 332[label=FALSE];
331 -> 333[label=""];
332 -> 333[label=""];
333 -> 334[label=TRUE];
333 -> 336[label=FALSE];
334 -> 335[label=TRUE];
334 -> 336[label=FALSE];
335 -> 336[label=""];
336 -> 337[label=TRUE];
336 -> 338[label=FALSE];
337 -> 339[label=""];
338 -> 339[label=""];
339 -> 340[label=""];
340 -> 341[label=TRUE];
340 -> 346[label=FALSE];
341 -> 342[label=TRUE];
341 -> 344[label=FALSE];
342 -> 343[label=TRUE];
342 -> 346[label=FALSE];
343 -> 346[label=""];
344 -> 345[label=TRUE];
344 -> 346[label=FALSE];
345 -> 346[label=""];
346 -> 347[label=TRUE];
346 -> 348[label=FALSE];
347 -> 349[label=""];
348 -> 349[label=""];
349 -> 350[label=TRUE];
349 -> 373[label=FALSE];
350 -> 351[label=""];
351 -> 352[label=TRUE];
351 -> 353[label=FALSE];
352 -> 353[label=""];
353 -> 354[label=TRUE];
353 -> 357[label=FALSE];
354 -> 355[label=""];
355 -> 356[label=TRUE];
355 -> 367[label=FALSE];
356 -> 367[label=""];
357 -> 358[label=TRUE];
357 -> 359[label=FALSE];
358 -> 361[label=""];
359 -> 360[label=TRUE];
359 -> 361[label=FALSE];
360 -> 361[label=""];
361 -> 362[label=TRUE];
361 -> 363[label=FALSE];
362 -> 364[label=""];
363 -> 364[label=""];
364 -> 365[label=""];
365 -> 366[label=TRUE];
365 -> 367[label=FALSE];
366 -> 367[label=""];
367 -> 368[label=""];
368 -> 369[label=TRUE];
368 -> 370[label=FALSE];
369 -> 371[label=""];
370 -> 371[label=""];
371 -> 372[label=TRUE];
371 -> 373[label=FALSE];
372 -> 373[label=""];
373 -> 374[label=TRUE];
373 -> 375[label=FALSE];
374 -> 375[label=""];
375 -> 376[label=TRUE];
375 -> 383[label=FALSE];
376 -> 377[label=TRUE];
376 -> 383[label=FALSE];
377 -> 378[label=TRUE];
377 -> 379[label=FALSE];
378 -> 383[label=""];
379 -> 380[label=TRUE];
379 -> 381[label=FALSE];
380 -> 383[label=""];
381 -> 382[label=TRUE];
381 -> 383[label=FALSE];
382 -> 383[label=""];
383 -> 384[label=TRUE];
383 -> 385[label=FALSE];
384 -> 385[label=""];
385 -> 386[label=TRUE];
385 -> 387[label=FALSE];
386 -> 387[label=""];
387 -> 388[label=""];
388 -> 389[label=TRUE];
388 -> 390[label=FALSE];
389 -> 390[label=""];
390 -> 1[label=""];
}
}
